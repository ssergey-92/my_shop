services:

  shop:
    build:
      context: ./shop
    stop_signal: SIGKILL
    env_file:
      - ./.env
    networks:
      - my_shop
    ports:
      - "80:80"
    logging:
      driver: json-file
      options:
        max-file: ${DOCKER_LOGGER_FILES}
        max-size: ${DOCKER_LOGGER_FILE_SIZE}
    volumes:
      - ./shop/logs/:/shop/logs/
      - ./shop/media/:/shop/media/
    depends_on:
      - db

  db:
    image: mysql:9.0.1
    restart: always
    stop_signal: SIGKILL
    env_file:
      - .env
    networks:
      - my_shop
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    volumes:
      - ./db_data/:/var/lib/mysql/
    logging:
      driver: json-file
      options:
        max-file: ${DOCKER_LOGGER_FILES}
        max-size: ${DOCKER_LOGGER_FILE_SIZE}

  redis:
    image: redis:7.4.0
    restart: always
    stop_signal: SIGKILL
    env_file:
      - .env
    command: >
      redis-server 
      --bind ${REDIS_CONTAINER_HOST}
      --requirepass ${REDIS_PASSWORD}
      --appendonly no 
      --save ""
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    healthcheck:
      test: > 
        CMD redis-cli ping
      timeout: ${REDIS_TIMEOUT}s
      interval: 5s
      retries: 2
    networks:
      - my_shop
#    depends_on:
#      - shop
    logging:
      driver: json-file
      options:
        max-file: ${DOCKER_LOGGER_FILES}
        max-size: ${DOCKER_LOGGER_FILE_SIZE}

  celery:
    build:
      context: ./shop
    stop_signal: SIGKILL
    env_file:
      - ./.env
    environment:
      - CELERY_WORKER=True
    entrypoint: >
      celery 
      -A shop 
      worker 
      -l debug
    networks:
      - my_shop
    logging:
      driver: json-file
      options:
        max-file: ${DOCKER_LOGGER_FILES}
        max-size: ${DOCKER_LOGGER_FILE_SIZE}
    depends_on:
      - redis

networks:
  my_shop:
    driver: bridge